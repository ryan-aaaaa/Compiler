/* test.sd
* multiline comment
* multiline comment
* multiline comment
*/
// single line comment


// constant declaration
const int    const_int = 10;
const float  const_float = 1.3;
const bool   const_bool = true;
const string const_string = "hello""world";

// variable declaration
int    var_int_1 = 0, var_int_2, var_int_3 = 12000;
float  var_float_1, var_float_2 = 1.34, var_float_3; 
bool   var_bool_1, var_bool_2, var_bool_3 = false;
string var_string_1 = "123434", var_string_2, var_string_3;


// array declaration
int      arr_int[10];
bool     arr_bool[1][2][3][4][5][1][2][3][4][5];
float    arr_float[3][4][5];
string   arr_string[65535];



// function declaration 
int int_func(int a, int b){
    return a + b;
}

float float_func(float a, float b){
    return a * b;
}

bool bool_func(string a, int b, float arr[3][4][5]){
    int c = 13, d;
    return b == d;
}

string string_func(int a){
    string str = "adfs";
    str = "hello" + "world";
    return str;
}


void main() {
    int i, j, k;
    int n = 10;
    int res = 0;

    // loop statement: for, while, each
    for(i=0; i<n; i++){
        for(j=n-1; j>=0; j--){
            foreach(k: n .. 3){
                int tmp = 0;
                tmp = i * j - k / j % k + arr_int[i + k + n / const_int];
                res = ++tmp; 
            }
            while(i != j) i--;
        }
    }

    println res;
    string s = "100";

    // condition statement: if, if-else
    if(s == string_func(res)) print "12343";
    else int x = 1;
    if(true) if(false) if(true) if(false) {res = 0;}

    // function call
    int_func(2, res);

    // block statement
    {{{float f = 10.3;{{{{{{int x; {{{{{{ /*block stmt*/ }}}}}}}}}}}read x;}}}}

    const int aa = 10;
    const int bb = 20 * aa + 12 / 5;
    const float cc = .2;
    const float dd = 1e8 / cc;
    const string ee = "";
    const string ff = """""""" + ee;
    const bool gg = true; 
    const bool hh = (true == true) && (false != false);
    bool ii = !((aa <= bb) && ((cc >= dd) || (ee != ff)) == (gg || hh));
    ii = ii && bool_func(ee, 100, arr_float);

    if(ii){
        // return statement
        return;
    }
}